#define COVER_CONFIG_DEF_CONTENT "// General Notes:\r\n// Most of these functions return an array with 3 elements\r\n// These are the x,y,z coordinates in 3d-space\r\n// x is left to right\r\n// y is bottom to top\r\n// z is front to back\r\n\r\n\r\n/************************* COVER DISPLAY *****************/\r\n// These functions define the Display of the single Covers\r\n// The given parameter coverId is a floating point number.\r\n// It is 0 for the center cover, 1 for the one right\r\n// beneath it, -1 for the one on the left side and so on.\r\n// During movement the values float between the integer\r\n// values.\r\nfunction coverPosition(coverId){\r\n   var x, y, z;\r\n   x = coverId*1.1;\r\n   y = 0;\r\n   z = -Math.abs(coverId);\r\n   return new Array(x, y, z);\r\n}\r\n\r\n// return array is (angle, x, y, z) - this rotates\r\n// the cover *angle* degrees around the vector (x,y,z)\r\n// With (0,0,0,0) the cover is parallel to the x-y-Plane\r\nfunction coverRotation(coverId){\r\n   return new Array(0, 0, 1, 0);\r\n}\r\n\r\n// Defines the the size boundaries for the cover.\r\n// Aspect ratio is preserved.\r\n// Return Array is (widht, height)\r\nfunction coverSizeLimits(coverId){\r\n   return new Array(1, 2);\r\n}\r\n\r\n// Sets which point of the cover coverPosition() defines\r\n// (-1,-1) means bottom left, (0,0) means center,\r\n// (1,1) means top right, (0, -1) means bottom center etc.\r\n// The cover is also rotated around this point.\r\nfunction coverAlign(coverId){\r\n   return new Array(0, -1);\r\n}\r\n\r\n// Defines the range of covers to draw.\r\n// Return array is (leftmostCover, rightmostCover)\r\n// This interval shouldn't be larger than 80\r\n// The center cover is 0.\r\nfunction drawCovers(){\r\n   return new Array(-10, 10);\r\n}\r\n\r\n// In which direction should the fov be expanded/shrinked\r\n// when the panel is resized?\r\n// If this returns (0,1), the height is fixed.\r\n// If this returns (1,0), the width is fixed.\r\n// You can also return stuff like (0.5,0.5) or (7, 3)\r\n// The values determine how important it is for this\r\n// dimension to stay fixed.\r\nfunction aspectBehaviour(){\r\n   return new Array(0, 1);\r\n}\r\n\r\n/************************** CAMMERA SETUP ****************/\r\n// Position of the viewport\r\nfunction eyePos(){\r\n\treturn new Array(0, 0.5, 6);\r\n}\r\n\r\n// Defines the point for the eye to look at\r\nfunction lookAt(){\r\n   return new Array(0, 0.5, 0);\r\n}\r\n\r\n// Used to rotate the view.\r\n// The returned Vector points upwards in the viewport.\r\n// This vector must not be parallel to the line of sight from the\r\n// eyePos point to the lookAt point.\r\nfunction upVector(){\r\n   return new Array(0, 1, 0);   \r\n}\r\n\r\n/************************** MIRROR SETUP *****************/\r\nfunction showMirrorPlane(){\r\n   return true; // return false to hide the mirror\r\n}\r\n\r\n// Any Point on the Mirror Plane\r\nfunction mirrorPoint(){\r\n   return new Array(0, 0, 0);\r\n}\r\n\r\n// Normal of the Mirror Plane\r\nfunction mirrorNormal(){\r\n   return new Array(0, 1, 0);\r\n}"
